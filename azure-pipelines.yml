trigger:
  branches:
    include:
    - main
    # Remove: - feature/*

pool: latestagent

stages:
- stage: Test
  displayName: 'Run Tests and Generate Reports'
  jobs:
  - job: RunTests
    steps:
    - checkout: self
      clean: true  # ‚Üê ADD THIS for fresh code

    - script: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt pytest-html
        echo "##vso[task.prependpath]$(pwd)/venv/bin"
      displayName: 'Setup Python with venv'

    - script: |
        mkdir -p test-reports
        echo "Created test-reports directory"
      displayName: 'Create reports directory'

    - script: |
        source venv/bin/activate
        python -m pytest tests/ -v --junitxml=test-reports/test-results.xml --html=test-reports/report.html --self-contained-html
      displayName: 'Run tests with HTML report'

    - task: PublishTestResults@2
      inputs:
        testRunner: 'JUnit'
        testResultsFiles: 'test-reports/test-results.xml'  # ‚Üê FIXED PATH
      displayName: 'Publish test results'

    - script: |
        source venv/bin/activate
        echo "Generating CSV test report..."
        python generate_csv_report.py
      displayName: 'Generate CSV test report'

    - script: |
        echo "=== CHECKING GENERATED FILES ==="
        pwd
        ls -la
        echo "=== TEST-REPORTS CONTENTS ==="
        ls -la test-reports/
        echo "=== CHECKING CSV FILE ==="
        [ -f "test-reports/test-results.csv" ] && echo "CSV file exists" || echo "CSV file missing"
      displayName: 'Debug Generated Files'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'test-reports'
        artifactName: 'HTMLTestReports'
      displayName: 'Publish HTML reports'

- stage: Approval
  displayName: 'üõë Deployment Approval'
  dependsOn: Test
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: WaitForApproval
    displayName: 'Wait for manual approval'
    pool: server
    timeoutInMinutes: 43200
    steps:
    - task: ManualValidation@0
      inputs:
        notifyUsers: |
          your-approver@company.com
          another-approver@company.com
        instructions: 'All tests passed! ‚úÖ Please review the HTMLTestReports artifact and approve deployment.'
        onTimeout: 'reject'

- stage: Deploy
  displayName: 'üöÄ Deploy to Production'
  dependsOn: Approval
  condition: succeeded()
  jobs:
  - job: Deploy
    steps:
    - script: |
        echo "Starting deployment..."
        # Add your deployment commands here
      displayName: 'Deploy application'