trigger:
  branches:
    include:
    - main

pool: latestagent

stages:
- stage: Test
  displayName: 'Run Tests and Generate Reports'
  jobs:
  - job: RunTests
    steps:
    - checkout: self
      clean: true

    - script: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt pytest-html
        echo "##vso[task.prependpath]$(pwd)/venv/bin"
      displayName: 'Setup Python with venv'

    - script: |
        mkdir -p test-reports
        echo "Created test-reports directory"
      displayName: 'Create reports directory'

    - script: |
        source venv/bin/activate
        python -m pytest tests/ -v --junitxml=test-reports/test-results.xml --html=test-reports/report.html --self-contained-html
      displayName: 'Run tests with HTML report'

    - task: PublishTestResults@2
      inputs:
        testRunner: 'JUnit'
        testResultsFiles: 'test-reports/test-results.xml'
      displayName: 'Publish test results'

    - script: |
        source venv/bin/activate
        echo "Generating CSV test report..."
        python generate_csv_report.py
      displayName: 'Generate CSV test report'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'test-reports'
        artifactName: 'HTMLTestReports'
      displayName: 'Publish HTML reports'

- stage: Deploy
  displayName: 'üöÄ Deploy to Production'
  dependsOn: Test
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployToProduction
    displayName: 'Deploy to Production'
    environment: 'Production'  # ‚Üê This will trigger the approval
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: HTMLTestReports
            displayName: 'Download test reports'
          
          - script: |
              echo "=== STARTING DEPLOYMENT ==="
              echo "All tests passed and approval granted!"
              echo "Deploying to production..."
              # Add your actual deployment commands here
              echo "Deployment completed successfully! üéâ"
            displayName: 'Deploy application'